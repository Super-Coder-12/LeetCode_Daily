from collections import defaultdict
import heapq

def highFive(items):
###### 这个数据结构是什么样的？map里面各自对应一个有heap

    student_scores = defaultdict(list)

    for id, score in items:
        heapq.heappush(student_scores[id], score) ####### heapq默认为小顶堆
        if len(student_scores[id]) > 5: ######## pop前五中最小的
            heapq.heappop(student_scores[id])

    result = []
    for id in student_scores: ###### 注意id和下面的要对上
        average = sum(student_scores[id]) // len(student_scores[id]) ####### 整数除法
        result.append([id, average])

    return sorted(result)

# 测试
items = [[1,91],[1,92],[2,93],[2,99],[2,98],[2,97],[2,100],[1,60],[1,58],[2,100],[1,61]]
print(highFive(items))  # 输出 [[1, 72.4], [2, 98.8]]
