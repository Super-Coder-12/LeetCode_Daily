# 在遍历每一步时，维护当前可以到达的最远范围，如果当前下标到了当前跳跃范围的末尾，就增加一步，并更新跳跃的边界。
def jump(self, nums: List[int]) -> int:
    n = len(nums)
    if n < 2:
        return 0
    
    jumps = 0
    current_end = 0
    farthest = 0
    
    for i in range(n - 1):
        farthest = max(farthest, i + nums[i])
        if i == current_end:
            jumps += 1
            current_end = farthest
            if current_end >= n - 1:
                break
    
    return jumps
