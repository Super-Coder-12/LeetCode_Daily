#include <iostream>
#include <string>
#include <stack>
#include <unordered_set>

using namespace std;

string minRemoveToMakeValid(string s) {
    stack<int> stk;
    unordered_set<int> to_remove;

    // 遍历字符串
    for (int i = 0; i < s.length(); ++i) {
        if (s[i] == '(') {
            stk.push(i);
        } else if (s[i] == ')') {
            if (!stk.empty()) {
                stk.pop();
            } else {
                to_remove.insert(i);
            }
        }
    }

    // 剩余在栈中的左括号索引需要删除
    while (!stk.empty()) {
        to_remove.insert(stk.top());
        stk.pop();
    }

    // 构建结果字符串
    string result;
    for (int i = 0; i < s.length(); ++i) {
        if (to_remove.find(i) == to_remove.end()) {
            result += s[i];
        }
    }

    return result;
}

// 示例测试
int main() {
    cout << minRemoveToMakeValid("lee(t(c)o)de)") << endl;  // 输出: "lee(t(c)o)de"
    cout << minRemoveToMakeValid("a)b(c)d") << endl;        // 输出: "ab(c)d"
    cout << minRemoveToMakeValid("))((") << endl;           // 输出: ""
    return 0;
}
