class Solution:
    def longestValidParentheses(self, s: str) -> int:
####### 栈中保存的是未匹配的左括号的索引或“无效位置”的索引。
####### 栈底始终保存的是最后一个无法匹配的右括号的索引（初始为 -1）。
        stack = [-1]  ######## stack 初始化为 [-1]，目的是标记一个虚拟的“无效位置”，用于后续计算长度
        max_length = 0

        for i, char in enumerate(s):
            if char == '(':
                stack.append(i)
            else:
                stack.pop()
                if not stack: ######## 第一个not valid的位置
                    stack.append(i)
                else:
                    max_length = max(max_length, i - stack[-1])

        return max_length
