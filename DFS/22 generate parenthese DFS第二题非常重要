def generateParenthesis(n):

    def dfs(path, left, right): #leftAddedSoFar, rightAddedSoFar
        # base case
        if len(path) == 2 * n:
            res.append(path)
            return

        # 两个分支，左边加‘（’，右边加‘）’
        if left < n:
            dfs(path + '(', left + 1, right)
        if right < left:
            dfs(path + ')', left, right + 1) #        为何这里算返回了前一个？？
    
    res = []
    dfs('', 0, 0)
    return res

# 示例用法:
n = 3
print(generateParenthesis(n))

TC: O(2^2N)
SC: O(N)
