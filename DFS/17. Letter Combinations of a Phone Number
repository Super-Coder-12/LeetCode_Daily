def letterCombinations(self, digits: str) -> List[str]:
    if not digits:
        return []
    
    phone = {
        "2": "abc", "3": "def", "4": "ghi", "5": "jkl",
        "6": "mno", "7": "pqrs", "8": "tuv", "9": "wxyz"
    }
    
    def dfs(s,path):
        if s == len(digits):
            res.append(path[:])
            return

        ############ n 叉树需要for循环
        for letter in phone[digits[s]]: ##### 这里要先找到s对应的key，然后找value，容易错
            dfs(s+1,path+letter)
    
    res = []
    dfs(0, '')
    return res

