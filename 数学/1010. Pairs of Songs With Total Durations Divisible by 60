############################# Amazon frequent asked question ############################
####################### asked Sora at 2021/11/01 ################

def num_pairs_divisible_by_60(time):
    remainder_count = [0] * 60  # 初始化一个长度为 60 的数组，用于记录各个余数出现的次数
    count = 0  # 用于记录符合条件的对数

    for t in time:
        remainder = t % 60  # 当前歌曲时间对 60 的余数
        if remainder == 0:  # 如果余数为 0，则需要寻找余数也为 0 的配对
            count += remainder_count[0]
        else:  # 否则，寻找余数与当前余数之和为 60 的配对
            count += remainder_count[60 - remainder]  # 当前元素与之前元素配对
        remainder_count[remainder] += 1  # 更新当前余数的计数

    return count

print(num_pairs_divisible_by_60([30, 20, 150, 100, 40]))  # 应该输出 3
print(num_pairs_divisible_by_60([60, 60, 60]))            # 应该输出 3

时间复杂度是 𝑂(𝑛)
空间复杂度𝑂(1) ———— 固定长度的哈希表
