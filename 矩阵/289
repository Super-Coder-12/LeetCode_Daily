def gameOfLife(self, board: List[List[int]]) -> None:
    """
    Do not return anything, modify board in-place instead.
    """
    m, n = len(board), len(board[0])

    def alive_neighbors(i,j):
        count = 0
        directions = [(-1,-1),(-1,0),(-1,1),(0,-1),(0,1),(1,-1),(1,0),(1,1)]
        for left, right in directions:
            ni, nj = i + left, j + right
            if 0 <= ni < m and 0 <= nj < n and (board[ni][nj] == 1 or board[ni][nj] == 2):
                count += 1
        return count

    # 0 -> 1 mark as 3, 1 -> 0 mark as 2
    for i in range(m):
        for j in range(n):
            if alive_neighbors(i,j) < 2 and (board[i][j] == 1 or board[i][j] == 2):
                board[i][j] = 2  # if orignally 0, no change
            if alive_neighbors(i,j) > 3 and (board[i][j] == 1 or board[i][j] == 2):
                board[i][j] = 2
            if alive_neighbors(i,j) == 3 and (board[i][j] == 0 or board[i][j] == 3):
                board[i][j] = 3

    for i in range(m):
        for j in range(n):
            board[i][j] = board[i][j] % 2

    return board

    
