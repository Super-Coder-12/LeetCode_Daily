class Solution:
    def nextPermutation(self, nums: List[int]) -> None:
        """
        Do not return anything, modify nums in-place instead.
        """
        n = len(nums)
        i = n - 2 ###### 从后往前第一个非递增元素位置
##### 找到末尾降序的一段，把最后一个提前，然后转成升序
        ##### 1. 从后向前找到第一个非递增的元素 如 186 -> 618 找到1
        while i >= 0 and nums[i] >= nums[i + 1]:
            i -= 1

        if i >= 0:
            ##### 2. 找到刚好大于nums[i]的元素 第二小的元素。如找到6 
            j = n - 1  #### j - [i,n]这段里面比nums[i]大一点的元素的位置
            while j >= 0 and nums[j] <= nums[i]:   ##### 从后往前遇到的第一个比num[i]大的就是，因为往前找更大
                j -= 1
            ##### 3. 交换这两个元素 如变成681
            nums[i], nums[j] = nums[j], nums[i]

        # Step 3: Reverse the elements after the index i  ###### 变成 618
        nums[i + 1:] = reversed(nums[i + 1:])

##### 难点在于从后往前找
