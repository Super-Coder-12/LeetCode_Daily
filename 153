from typing import List


def findMin(self, nums: List[int]) -> int:
    left = 0
    right = len(nums) - 1

    while left < right:
      mid = left + (right - left) // 2 # 0
      if nums[left] > nums[mid]: # 3 > 1 ############# 重点是，nums[mid]较小，小于nums[left]或者nums[right]都行 ################
        # replace the right bound
        right = mid
      else: # replace the left
        left = mid + 1

    return nums[right]  ############### left right重合， return nums[left]也行 ##############

print(findMin(0,[3,1]))

########### 复杂度o(logn) ############
########### 记住图像 #########

########### 何时加减一，为什么会造成死循环？？ #########
