### hash Table Q1
############# 20211019 asked Sora #################
############ two pointers(sliding window) and dictionary ####################
def lengthOfLongestSubstring(s: str) -> int:
    last_index = {}  # 字符最后出现的位置
    max_length = 0  # 最长子串的长度
    start = 0  # 滑动窗口的开始位置

    for end in range(len(s)):
        if s[end] in last_index and last_index[s[end]] >= start:
            start = last_index[s[end]] + 1
        last_index[s[end]] = end
        max_length = max(max_length, end - start + 1)

    return max_length

# 示例
print(lengthOfLongestSubstring("abcabcbb"))  # 输出 3
print(lengthOfLongestSubstring("bbbbb"))     # 输出 1
print(lengthOfLongestSubstring("pwwkew"))    # 输出 3
