# Definition for singly-linked list.
class ListNode:
    def __init__(self, val=0, next=None):
        self.val = val
        self.next = next

def mergeTwoLists(list1: ListNode, list2: ListNode) -> ListNode:
    dummy = ListNode(-1)  # 创建一个虚拟头节点
    current = dummy
    
    while list1 and list2:
        if list1.val <= list2.val:
            current.next = list1
            list1 = list1.next
        else:
            current.next = list2
            list2 = list2.next
        current = current.next

    # 如果 list1 或 list2 中有剩余，直接连接到合并链表的末尾
    if list1:
        current.next = list1
    elif list2:
        current.next = list2

    return dummy.next  # 返回虚拟头节点的下一个节点，即合并后的链表的头节点

# 创建两个测试链表
l1 = ListNode(1, ListNode(2, ListNode(4)))
l2 = ListNode(1, ListNode(3, ListNode(4)))

# 调用函数并打印结果
merged_list = mergeTwoLists(l1, l2)
while merged_list:
    print(merged_list.val, end=" -> ")
    merged_list = merged_list.next
