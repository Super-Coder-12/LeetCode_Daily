############## Hash Table & Dictionary Question 4 ###############
####### itertools

def validSquare(p1, p2, p3, p4):
    def dist_sq(pt1, pt2):
        return (pt1[0] - pt2[0]) ** 2 + (pt1[1] - pt2[1]) ** 2

    distances = [
        dist_sq(p1, p2), dist_sq(p1, p3), dist_sq(p1, p4),
        dist_sq(p2, p3), dist_sq(p2, p4), dist_sq(p3, p4)
    ]

    # 使用集合来消除重复的距离并统计每个距离出现的次数
    dist_count = {d: distances.count(d) for d in set(distances)}

    # 应该只有两种距离：四条边和两条对角线
    return len(dist_count) == 2 and 4 in dist_count.values() and 2 in dist_count.values()

# 示例调用
print(validSquare([0,0], [1,1], [1,0], [0,1]))  # 输出：true
print(validSquare([0,0], [1,1], [1,0], [0,12]))  # 输出：false
print(validSquare([1,0], [-1,0], [0,1], [0,-1]))  # 输出：true
