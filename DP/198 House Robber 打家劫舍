def rob(self, nums: List[int]) -> int:
    if len(nums) < 2:
        return sum(nums)

    pre, cur = nums[0], max(nums[0],nums[1]) ######## 注意第二个判断max
    for i in range(2, len(nums)):
        pre, cur = cur, max(nums[i] + pre, cur)
    return cur

#########################################################
def rob(nums):
    if not nums:
        return 0
    if len(nums) == 1:
        return nums[0]
    
    dp = [0] * len(nums)
    dp[0] = nums[0]
    dp[1] = max(nums[0], nums[1])

    for i in range(2, len(nums)):
        dp[i] = max(dp[i-1], dp[i-2] + nums[i])
    
    return dp[-1]

# 示例测试
print(rob([1,2,3,1]))  # 输出: 4
print(rob([2,7,9,3,1]))  # 输出: 12

