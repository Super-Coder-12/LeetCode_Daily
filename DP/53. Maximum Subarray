###### Kadane算法（动态规划） #########
def maxSubArray(self, nums: List[int]) -> int:
    n = len(nums)
    dp = [0] * n
    dp[0] = nums[0]  ####### 注意第一个非0

    for i in range(1,n):
        dp[i] = max(nums[i], dp[i-1] + nums[i])

    return max(dp) ######## ends_here问题。能否再简化？


print(maxSubArray([-2,1,-3,4,-1,2,1,-5,4]))  # 输出 6，子数组 [4,-1,2,1] 有最大和 6
print(maxSubArray([1]))                     # 输出 1
print(maxSubArray([5,4,-1,7,8]))            # 输出 23
