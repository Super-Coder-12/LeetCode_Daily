############################# 0ct-14 asked sora ###################

class Solution:
    def coinChange(self, coins: List[int], amount: int) -> int:
        dp = [amount + 1] * (amount + 1) ######### 或者设置为无穷大
        dp[0] = 0

        # 遍历金额 -> 遍历硬币双层
        for i in range(1, amount + 1):
            for coin in coins:
                if i >= coin:
                    dp[i] = min(dp[i], dp[i - coin] + 1)
        
        return dp[-1] if dp[-1] != amount + 1 else -1  ######### 注意判断

# 示例
print(coinChange([1, 2, 5], 11))  # 输出 3 (11 = 5 + 5 + 1)
print(coinChange([2], 3))         # 输出 -1 (无法凑齐)
print(coinChange([1], 0))         # 输出 0 (无需任何硬币)
